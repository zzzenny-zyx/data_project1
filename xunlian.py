# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'xunlian.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from forest_yuce import forest
from sklearn.metrics import roc_curve, auc
from matplotlib.figure import Figure
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.btn_LSTM = QtWidgets.QPushButton(self.centralwidget)
        self.btn_LSTM.setGeometry(QtCore.QRect(50, 90, 150, 40))
        self.btn_LSTM.setObjectName("btn_LSTM")

        self.btn_duibi = QtWidgets.QPushButton(self.centralwidget)
        self.btn_duibi.setGeometry(QtCore.QRect(50, 160,150, 40))
        self.btn_duibi.setObjectName("btn_duibi")

        self.btn_pingjia = QtWidgets.QPushButton(self.centralwidget)
        self.btn_pingjia.setGeometry(QtCore.QRect(50, 230, 150, 40))
        self.btn_pingjia.setObjectName("btn_pingjia")

        self.returnButton = QtWidgets.QPushButton(self.centralwidget)
        self.returnButton.setGeometry(QtCore.QRect(50, 300, 150, 40))
        self.returnButton.setObjectName("btn_fanhui")


        self.tableWidget_zhibiao = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget_zhibiao.setGeometry(QtCore.QRect(300, 80, 400, 250))
        self.tableWidget_zhibiao.setObjectName("tableWidget_zhibiao")

        self.graphicsView_AUC = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView_AUC.setGeometry(QtCore.QRect(300, 340, 650, 500))
        self.graphicsView_AUC.setObjectName("graphicsView_AUC")



        self.tableWidget_zhibiao.setColumnCount(0)
        self.tableWidget_zhibiao.setRowCount(0)


        # self.graphicsView_AUC = QtWidgets.QGraphicsView(self.centralwidget)
        # self.graphicsView_AUC.setGeometry(QtCore.QRect(210, 281, 291, 191))
        # self.graphicsView_AUC.setObjectName("graphicsView_AUC")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.btn_LSTM.clicked.connect(self.on_btn_LSTM_clicked)
    def on_btn_LSTM_clicked(self):
        # 调用LSTM预测函数
        path = r"D:\python_project\pitot tube\data\6865"
        accuracy, precision, recall, f1_score,y_test,y_pred = forest(path)
        # 更新表格
        self.update_table(accuracy, precision, recall, f1_score)
        self.plot_roc_curve(y_test,y_pred)

    def update_table(self, accuracy, precision, recall, f1_score):
        # 设置表格行数和列数
        self.tableWidget_zhibiao.setRowCount(4)
        self.tableWidget_zhibiao.setColumnCount(2)

        # 设置表头
        self.tableWidget_zhibiao.setHorizontalHeaderLabels(['指标', '值'])

        # 填充数据
        self.tableWidget_zhibiao.setItem(0, 0, QtWidgets.QTableWidgetItem('Accuracy'))
        self.tableWidget_zhibiao.setItem(0, 1, QtWidgets.QTableWidgetItem(f'{accuracy:.2f}'))
        self.tableWidget_zhibiao.setItem(1, 0, QtWidgets.QTableWidgetItem('Precision'))
        self.tableWidget_zhibiao.setItem(1, 1, QtWidgets.QTableWidgetItem(f'{precision:.2f}'))
        self.tableWidget_zhibiao.setItem(2, 0, QtWidgets.QTableWidgetItem('Recall'))
        self.tableWidget_zhibiao.setItem(2, 1, QtWidgets.QTableWidgetItem(f'{recall:.2f}'))
        self.tableWidget_zhibiao.setItem(3, 0, QtWidgets.QTableWidgetItem('F1 Score'))
        self.tableWidget_zhibiao.setItem(3, 1, QtWidgets.QTableWidgetItem(f'{f1_score:.2f}'))

    def plot_roc_curve(self, y_true, y_scores):
        # 创建一个新图表
        fig = Figure()
        ax = fig.add_subplot(111)
        # 计算ROC曲线
        fpr, tpr, _ = roc_curve(y_true, y_scores)
        roc_auc = auc(fpr, tpr)
        # 绘制ROC曲线
        ax.plot(fpr, tpr, color='darkorange', lw=2, label='ROC curve (area = %0.2f)' % roc_auc)
        ax.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')
        ax.set_xlim([0.0, 1.0])
        ax.set_ylim([0.0, 1.05])
        ax.set_xlabel('False Positive Rate')
        ax.set_ylabel('True Positive Rate')
        # ax.set_title('Receiver Operating Characteristic')
        ax.legend(loc="lower right")
        # 将图表绘制到QGraphicsView中
        self.canvas = FigureCanvas(fig)
        scene = QtWidgets.QGraphicsScene()
        scene.addWidget(self.canvas)
        self.graphicsView_AUC.setScene(scene)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "模型展示"))
        self.btn_LSTM.setText(_translate("MainWindow", "训练LSTM"))
        self.btn_duibi.setText(_translate("MainWindow", "展示预测对比图"))
        self.btn_pingjia.setText(_translate("MainWindow", "展示评价指标"))
        self.returnButton.setText(_translate("MainWindow", "返回"))
